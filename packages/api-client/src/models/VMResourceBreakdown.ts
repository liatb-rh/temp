/* tslint:disable */
/* eslint-disable */
/**
 * Migration Planner API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: undefined
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VMResourceBreakdownHistogram } from './VMResourceBreakdownHistogram';
import {
    VMResourceBreakdownHistogramFromJSON,
    VMResourceBreakdownHistogramFromJSONTyped,
    VMResourceBreakdownHistogramToJSON,
} from './VMResourceBreakdownHistogram';

/**
 * 
 * @export
 * @interface VMResourceBreakdown
 */
export interface VMResourceBreakdown {
    /**
     * 
     * @type {number}
     * @memberof VMResourceBreakdown
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof VMResourceBreakdown
     */
    totalForMigratable: number;
    /**
     * 
     * @type {number}
     * @memberof VMResourceBreakdown
     */
    totalForMigratableWithWarnings: number;
    /**
     * 
     * @type {number}
     * @memberof VMResourceBreakdown
     */
    totalForNotMigratable: number;
    /**
     * 
     * @type {VMResourceBreakdownHistogram}
     * @memberof VMResourceBreakdown
     */
    histogram: VMResourceBreakdownHistogram;
}

/**
 * Check if a given object implements the VMResourceBreakdown interface.
 */
export function instanceOfVMResourceBreakdown(value: object): value is VMResourceBreakdown {
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('totalForMigratable' in value) || value['totalForMigratable'] === undefined) return false;
    if (!('totalForMigratableWithWarnings' in value) || value['totalForMigratableWithWarnings'] === undefined) return false;
    if (!('totalForNotMigratable' in value) || value['totalForNotMigratable'] === undefined) return false;
    if (!('histogram' in value) || value['histogram'] === undefined) return false;
    return true;
}

export function VMResourceBreakdownFromJSON(json: any): VMResourceBreakdown {
    return VMResourceBreakdownFromJSONTyped(json, false);
}

export function VMResourceBreakdownFromJSONTyped(json: any, ignoreDiscriminator: boolean): VMResourceBreakdown {
    if (json == null) {
        return json;
    }
    return {
        
        'total': json['total'],
        'totalForMigratable': json['totalForMigratable'],
        'totalForMigratableWithWarnings': json['totalForMigratableWithWarnings'],
        'totalForNotMigratable': json['totalForNotMigratable'],
        'histogram': VMResourceBreakdownHistogramFromJSON(json['histogram']),
    };
}

export function VMResourceBreakdownToJSON(value?: VMResourceBreakdown | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'total': value['total'],
        'totalForMigratable': value['totalForMigratable'],
        'totalForMigratableWithWarnings': value['totalForMigratableWithWarnings'],
        'totalForNotMigratable': value['totalForNotMigratable'],
        'histogram': VMResourceBreakdownHistogramToJSON(value['histogram']),
    };
}

